parameters:
  - name: connectionStringName
    type: string
  - name: tenant
    type: string
  - name: azureServiceConnection
    type: string
  - name: environment
    type: string
  - name: paasEnvironment
    type: string
  - name: pool
    type: string
  - name: keyVaultName
    type: string

jobs:
  - template: jobs/deploy/request-azdo-agent.yml@pipeline-templates-paas2
    parameters:
      azureServiceConnection: '${{ parameters.azureServiceConnection }}'
      environment: '${{ parameters.paasEnvironment }}'
      entityCode: 'esm'

  - job:
    displayName: Deploy
    pool: '${{ parameters.pool }}'
    steps:
      - checkout: pipelines

      - task: AzureKeyVault@2
        displayName: 'Get connection string from key vault'
        inputs:
          azureSubscription: '${{ parameters.azureServiceConnection }}'
          KeyVaultName: '${{ parameters.keyVaultName }}'
          SecretsFilter: '${{ parameters.connectionStringName }}'

      - task: PowerShell@2
        displayName: 'Convert ADO to JDBC connectionString'
        inputs:
          pwsh: true
          targetType: 'filePath'
          filePath: './Pipelines/liquibase/convertTo-JdbcConnectionString.ps1'
          arguments: >
            -connectionString '$(${{ parameters.connectionStringName }})'

      - checkout: self

      - powershell: |
          $tenant = "${{ parameters.tenant }}"
          if ([string]::IsNullOrEmpty($tenant)) {
              $filter = "global"
          } else {
              $filter = "global or $tenant"
          }
          liquibase update --changelog-file=./ChangeLog.xml  --contexts=${{ parameters.environment }} --labelFilter=$filter --log-level=INFO --url "$(JdbcConnectionString)"
        displayName: 'Plan ChangeLog'
        workingDirectory: $(Build.Repository.Name)
